<?php

namespace Proxies\__CG__\Student\UsersBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Stage extends \Student\UsersBundle\Entity\Stage implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'idStage', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'sujetStage', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'dateDebut', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'dateFin', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'affect', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'idTechnologie', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'idDepartement', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'idTypestage'];
        }

        return ['__isInitialized__', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'idStage', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'sujetStage', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'dateDebut', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'dateFin', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'affect', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'idTechnologie', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'idDepartement', '' . "\0" . 'Student\\UsersBundle\\Entity\\Stage' . "\0" . 'idTypestage'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Stage $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdStage()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdStage();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdStage', []);

        return parent::getIdStage();
    }

    /**
     * {@inheritDoc}
     */
    public function setSujetStage($sujetStage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSujetStage', [$sujetStage]);

        return parent::setSujetStage($sujetStage);
    }

    /**
     * {@inheritDoc}
     */
    public function getSujetStage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSujetStage', []);

        return parent::getSujetStage();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDebut($dateDebut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDebut', [$dateDebut]);

        return parent::setDateDebut($dateDebut);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDebut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDebut', []);

        return parent::getDateDebut();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFin($dateFin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFin', [$dateFin]);

        return parent::setDateFin($dateFin);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFin', []);

        return parent::getDateFin();
    }

    /**
     * {@inheritDoc}
     */
    public function setAffect($affect)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAffect', [$affect]);

        return parent::setAffect($affect);
    }

    /**
     * {@inheritDoc}
     */
    public function getAffect()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAffect', []);

        return parent::getAffect();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdTechnologie(\Student\UsersBundle\Entity\Technologie $idTechnologie = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdTechnologie', [$idTechnologie]);

        return parent::setIdTechnologie($idTechnologie);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdTechnologie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdTechnologie', []);

        return parent::getIdTechnologie();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdDepartement(\Student\UsersBundle\Entity\Departement $idDepartement = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdDepartement', [$idDepartement]);

        return parent::setIdDepartement($idDepartement);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdDepartement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdDepartement', []);

        return parent::getIdDepartement();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdTypestage(\Student\UsersBundle\Entity\TypeStage $idTypestage = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdTypestage', [$idTypestage]);

        return parent::setIdTypestage($idTypestage);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdTypestage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdTypestage', []);

        return parent::getIdTypestage();
    }

}
